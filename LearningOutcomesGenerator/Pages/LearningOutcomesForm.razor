@using System.Text
@inject ClipBoardService ClipBoardService

<div class="flex flex-col w-4/6 mx-auto my-3 min-h-[98%] max-h-[98%] h-[98%] relative border-3 border-adlerdarkblue rounded overflow-hidden bg-gradient-to-br from-adlerbggradientto to-adlergrey-100">
    <div class="flex flex-col my-2 mx-4 gap-2">
        <div class="flex flex-row justify-between">
            <MudText Class="cursor-default flex justify-start text-xs text-adlerdarkblue">* Pflichtfeld</MudText>
            <a class="flex justify-end text-xs text-adlerblue" target="_blank" href="/CustomIcons/Beispiel_Learning_Outcome.png">Beispiel für eine Learning Outcome-Formulierung</a>
        </div>
    
        <MudText Class="cursor-default flex justify-center items-center text-lg 2xl:text-xl font-bold text-adlerdarkblue">Eingabeunterstützung für Learning Outcomes</MudText>
        <div class="flex flex-row">
            <MudText Class="cursor-default text-sm text-adlergrey-800">Machen Sie sich zunächst Gedanken dazu, auf welcher Taxonomiestufe Sie Ihr Learning Outcome formulieren möchten.</MudText>
        </div>
    </div>

    <div class="border-adlergrey-300 bg-white border-2 rounded mx-4">
        <div class="flex flex-row gap-4 m-2 pb-8">
            <div class="w-32 2xl:w-48 flex flex-row items-center justify-center gap-2 p-2 bg-adlerblue-100 rounded">
                <MudText Class="cursor-default text-xs 2xl:text-sm text-adlerdarkblue font-bold break-all">Taxonomiestufe</MudText>
                <MudTooltip Placement="Placement.Right" Class="w-80 p-4 bg-adlerdarkblue-200 shadow-xl text-start leading-relaxed" Text="Die Formulierung eines Learning Outcomes fokussiert die Beschreibung von entsprechenden Fähigkeiten, Fertigkeiten oder Kompetenzen des intendierten Lernprozesses der Studierenden. Diese lassen sich aufgrund ihrer Komplexität der kognitiven Prozesse einer Taxonomiestufe zuordnen. Die Festlegung einer Taxonomiestufe (nach Anderson & Krathwohl) dient in den weiteren Bearbeitungsschritten der Learning Outcome-Formulierung zum Finden eines passenden Verbes der Sichtbarkeit.">
                    <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Info" Class="text-adlergrey hover:text-adlerdarkblue"></MudIcon>
                </MudTooltip>
            </div>
            <MudSelect @bind-Value="_selectedTaxonomyLevel" Placeholder="Auswahl der Taxonomiestufe">
        
                <MudSelectItem Value="@_taxonomyLevels[0].ToString()">
                    <div class="flex flex-row items-center">
                        <div class="w-[10%] text-md break-all font-bold text-adlerblue-500">@_taxonomyLevels[0].ToString()</div>
                        <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowRightAlt" Color="Color.Default"></MudIcon>
                        <span class="pl-1 text-adlergrey text-xs italic break-all"> Auf relevantes Wissen im Langzeitgedächtnis zugreifen </span>
                    </div>
                </MudSelectItem>
        
                <MudSelectItem Value="@_taxonomyLevels[1].ToString()">
                    <div class="flex flex-row items-center">
                        <div class="w-[10%] text-md break-all font-bold text-adlerblue-500">@_taxonomyLevels[1].ToString()</div>
                        <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowRightAlt" Color="Color.Default"></MudIcon>
                        <span class="pl-1 text-adlergrey text-xs italic break-all"> Informationen (mündlich, schriftlich oder grafisch) in der Lerneinheit Bedeutung zuordnen</span>
                    </div>
                </MudSelectItem>
        
                <MudSelectItem Value="@_taxonomyLevels[2].ToString()">
                    <div class="flex flex-row items-center">
                        <div class="w-[10%] text-md break-all font-bold text-adlerblue-500">@_taxonomyLevels[2].ToString()</div>
                        <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowRightAlt" Color="Color.Default"></MudIcon>
                        <span class="pl-1 text-adlergrey text-xs italic break-all"> Einen Handlungsablauf oder eine Methode in einer bestimmten Situation anwenden</span>
                    </div>
                </MudSelectItem>
        
                <MudSelectItem Value="@_taxonomyLevels[3].ToString()">
                    <div class="flex flex-row items-center">
                        <div class="w-[10%] text-md break-all font-bold text-adlerblue-500">@_taxonomyLevels[3].ToString()</div>
                        <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowRightAlt" Color="Color.Default"></MudIcon>
                        <span class="pl-1 text-adlergrey text-xs italic break-all"> Lerninhalte in ihre Elemente zerlegen und ihre Verbindung zur übergreifenden Struktur bestimmen </span>
                    </div>
                </MudSelectItem>
        
                <MudSelectItem Value="@_taxonomyLevels[4].ToString()">
                    <div class="flex flex-row items-center">
                        <div class="w-[10%] text-md break-all font-bold text-adlerblue-500">@_taxonomyLevels[4].ToString()</div>
                        <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowRightAlt" Color="Color.Default"></MudIcon>
                        <span class="text-adlergrey text-xs italic break-all"> Urteile aufgrund von Kriterien oder Standards abgeben</span>
                    </div>
                </MudSelectItem>
        
                <MudSelectItem Value="@_taxonomyLevels[5].ToString()">
                    <div class="flex flex-row items-center">
                        <div class="w-[10%] text-md break-all font-bold text-adlerblue-500">@_taxonomyLevels[5].ToString()</div>
                        <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowRightAlt" Color="Color.Default"></MudIcon>
                        <span class="text-adlergrey text-xs italic break-all"> Elemente zu einer zusammenhängenden Struktur zusammenfügen</span>
                    </div> 
                </MudSelectItem>
        
            </MudSelect>
        </div>

        <div class="flex flex-row gap-4 m-2">
            <MudText Class="w-32 2xl:w-48 p-2"></MudText>
            <MudText Class="cursor-default text-md text-adlergrey-800">"Nach erfolgreicher Beendigung des Lernraums können Studierende...</MudText>
        </div>

        <div class="flex flex-row gap-4 m-2">
            <div class="w-32 2xl:w-48 flex flex-row items-center justify-center gap-2 p-2 bg-adlergrey-100 rounded">
                <MudText Class="cursor-default text-xs 2xl:text-sm text-adlerdarkblue font-bold break-all">Was? (Inhalt)*</MudText>
                <MudTooltip Placement="Placement.Right" Class="w-80 p-4 bg-adlerdarkblue-200 shadow-xl text-start leading-relaxed" Text="Das 'Was' sagt aus, welcher Lerninhalt (inhaltliches Thema) im Rahmen des Kompetenzerwerbs der Studierenden adressiert werden soll. Dieser wird in den folgenden Schritten mit Hilfe einer Taxonomiestufe und einem Verb der Sichtbarkeit zu einer entsprechenden Fähigkeit, Fertigkeit oder Kompetenz weiterformuliert.">
                    <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Info" Class="text-adlergrey hover:text-adlerdarkblue"></MudIcon>
                </MudTooltip>
            </div>
            <MudTextField @bind-Value="_currentLearningOutcome.What" Placeholder="Textfeld" Lines="2" DebounceInterval="1" Clearable="true" Immediate="true"></MudTextField>
        </div>

        <div class="flex flex-row gap-4 m-2">
            <div class="w-32 2xl:w-48 flex flex-row items-center justify-center gap-2 p-2 bg-adlergrey-100 rounded">
                <MudText Class="cursor-default text-xs 2xl:text-sm text-adlerdarkblue font-bold break-all">Verb der Sichtbarkeit*</MudText>
                <MudTooltip Placement="Placement.Right" Class="w-80 p-4 bg-adlerdarkblue-200 shadow-xl text-start leading-relaxed" Text="Das Learning Outcome beschreibt gewünschte Verhaltensdispositionen und welche Fähigkeiten, Fertigkeiten oder Kompetenzen die Lernenden am Ende des Lernprozesses entwickelt haben werden. Es beschreibt also Handlungen, welche mit Hilfe von Verben der äußeren Sichtbarkeit formuliert werden. Diese stellen ein Tun an/mit einem äußeren Objekt dar. Die Verben der äußeren Sichtbarkeit lassen sich einer Taxonomiestufe zuordnen.">
                    <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Info" Class="text-adlergrey hover:text-adlerdarkblue"></MudIcon>
                </MudTooltip>
            </div>
            <MudAutocomplete T="string" Placeholder="Formulieren oder auswählen" MaxItems="1000"
                             @bind-Value="_currentLearningOutcome.VerbOfVisibility"
                             @bind-Text="_currentText"
                             CoerceText="true" 
                             CoerceValue="true"
                             SearchFunc="@SearchVerbOfVisibility"
                             OnBlur="@OnBlurVerbOfVisibility"
                             DebounceInterval="300"/>
        </div>

        <div class="flex flex-row gap-4 m-2">
            <div class="w-32 2xl:w-48 flex flex-row items-center justify-center gap-2 p-2 bg-adlergrey-100 rounded">
                <MudText Class="cursor-default text-xs 2xl:text-sm text-adlerdarkblue font-bold break-all">Womit?</MudText>
                <MudTooltip Placement="Placement.Right" Class="w-80 p-4 bg-adlerdarkblue-200 shadow-xl text-start leading-relaxed" Text="Das 'Womit' beschreibt, mittels welcher theoretischen oder praktischen Werkzeuge Lernende ihre Handlungen ausführen. Im 'Womit' finden sich die Formeln, Modelle, Pläne, Begriffe etc., die im Laufe der Veranstaltung kennengelernt werden, deren Nutzung geübt wird und deren Ineinandergreifen für ein kompetentes Handeln erforderlich ist.">
                    <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Info" Class="text-adlergrey hover:text-adlerdarkblue"></MudIcon>
                </MudTooltip>
            </div>
            <MudText Class="cursor-default w-24 flex items-center text-md text-adlergrey-800"> indem sie... </MudText>
            <MudTextField @bind-Value="_currentLearningOutcome.Whereby" Placeholder="Textfeld" Lines="2" DebounceInterval="1" Clearable="true" Immediate="true"></MudTextField>
        </div>

        <div class="flex flex-row gap-4 m-2">
            <div class="w-32 2xl:w-48 flex flex-row items-center justify-center gap-2 p-2 bg-adlergrey-100 rounded">
                <MudText Class="cursor-default text-xs 2xl:text-sm text-adlerdarkblue font-bold break-all">Wozu?</MudText>
                <MudTooltip Placement="Placement.Right" Class="w-80 p-4 bg-adlerdarkblue-200 shadow-xl text-start leading-relaxed" Text="Das 'Wozu' gibt einen Ausblick auf den Sinnhorizont, für den die Lerneinheit konzipiert wurde. Es beschreibt quasi den nächsten Schritt, den Studierende gehen können, wenn sie das Gelernte sicher beherrschen. Das 'Wozu' ist allerdings nicht Bestandteil der Prüfung. Hilfreiche Fragestellungen bei der Formulierung sind: 'Für welchen Zweck sollen die Kompetenzen erworben werden?' und/oder 'Wozu benötigen die Studierenden die erworbenen Fähigkeiten, Fertigkeiten oder Kompetenzen nach der Lehrveranstaltung?'.">
                    <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Info" Class="text-adlergrey hover:text-adlerdarkblue"></MudIcon>
                </MudTooltip>
            </div>
            <MudText Class="cursor-default w-24 flex items-center text-md text-adlergrey-800"> um... </MudText>
            <MudTextField @bind-Value="_currentLearningOutcome.WhatFor" Placeholder="Textfeld" Lines="2" DebounceInterval="1" Clearable="true" Immediate="true"></MudTextField>
        </div>
    </div>
    
    <div class="flex flex-row justify-end items-center mx-4">
        <MudButton Class="mt-1.5" OnClick="ResetInputFields">
            <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Refresh" ></MudIcon>
            <MudText Class="uppercase pl-1 text-sm text-adlergrey-700 font-bold">Eingaben zurücksetzen</MudText>
        </MudButton>
    </div>

    <div class="flex flex-col gap-2 my-2 mx-4 pt-6">
    <MudText Class="cursor-default text-adlergrey-800 text-sm">Vorschau des formulierten Learning Outcomes:</MudText>
    <div class="bg-white border border-adlergrey-300 border-2 rounded px-4 pt-5">
        <MudMarkdown Value="@_currentLearningOutcome.GetMarkDownFormattedOutcome()"></MudMarkdown>
    </div>
</div>

    <div class="flex flex-row mx-4 pb-1">
        <MudButton Class="text-adlerblue font-bold flex-auto justify-start" Disabled="!_currentLearningOutcome.IsCopyable()" StartIcon="@Icons.Material.Filled.ContentCopy" OnClick="@CopyToClickBoard">In die Zwischenablage kopieren</MudButton>
        <a href="https://projekt-adler.eu/" target="_blank" title="Website zum Projekt AdLer">
            <img class="flex-none w-12" src="CustomIcons/AdLer_Logo.png" alt="Projekt AdLer-Logo" />
        </a>
    </div>
</div>

@code {
    private LearningOutcome _currentLearningOutcome = new();
    private TaxonomyLevel[] _taxonomyLevels = (TaxonomyLevel[]) Enum.GetValues(typeof(TaxonomyLevel));
    
    private string _selectedTaxonomyLevel = "";

    public class LearningOutcome
    {
        public string What { get; set; } = "";
        public string Whereby { get; set; } = "";
        public string WhatFor { get; set; } = "";
        public string VerbOfVisibility { get; set; } = "";

        public string GetMarkDownFormattedOutcome() =>
            $"Nach erfolgreicher Beendigung des Lernraums können Studierende {FormatWithPlaceholder(What)} {FormatWithPlaceholder(VerbOfVisibility)}, \n indem sie {FormatWithPlaceholder(Whereby)},\n um {FormatWithPlaceholder(WhatFor)}.";

        public bool IsCopyable() =>
            !IsNullOrEmpty(What) && !IsNullOrEmpty(VerbOfVisibility);

        private bool IsNullOrEmpty(string value) =>
            string.IsNullOrWhiteSpace(value);

        public string GetOutcomeToCopy()
        {
            var sb = new StringBuilder("Nach erfolgreicher Beendigung des Lernraums können Studierende ");
            sb.Append(What).Append(" ").Append(VerbOfVisibility);

            if (!IsNullOrEmpty(Whereby))
            {
                sb.Append(", \n indem sie ").Append(Whereby);
            }

            if (!IsNullOrEmpty(WhatFor))
            {
                sb.Append(",\n um ").Append(WhatFor);
            }

            sb.Append(".");

            return sb.ToString();
        }
    }

    public enum TaxonomyLevel
    {
        Erinnern,
        Verstehen,
        Anwenden,
        Analysieren,
        Beurteilen,
        Erschaffen
    }
    
    public enum VerbOfVisibility
    {
        anführen, angeben, ausdrücken, auflisten, aufsagen, aufschreiben, aufzählen, benennen, berichten, beschreiben, bezeichnen, erzählen,
        anordnen, auswählen, charakterisieren, darlegen, deuten, erklären, erläutern, generalisieren, interpretieren, präzisieren, repräsentieren,
        anknüpfen, anpassen, anwenden, bearbeiten, bedienen, beeinflussen, benutzen, berechnen, demonstrieren, durchführen, einsetzen, erproben, formulieren, herstellen, illustrieren, implementieren, konfigurieren, praktizieren, realisieren, umsetzen,
        abgrenzen, analysieren, aufschlüsseln, aufzeigen, darstellen, diagnostizieren, differenzieren, einordnen, einteilen, erkennen, ermitteln, gliedern, herausstellen, identifizieren, integrieren, isolieren, kategorisieren, kontrastieren, nachweisen, organisieren, prüfen, schlussfolgern, unterscheiden, untersuchen, unterteilen, verknüpfen, verwenden, zergliedern, zerlegen,
        abwägen, kritisch_vergleichen, abschätzen, argumentieren, auswerten, begründen, bestimmen, beurteilen, bewerten, diskutieren, einschätzen, einstufen, entscheiden, erheben, evaluieren, falsifizieren, folgern, gegenüberstellen, gewichten, hinterfragen, klassifizieren, kritisieren, priorisieren, rechtfertigen, schätzen, strukturieren, synthetisieren, überprüfen, validieren, vereinfachen, vergleichen, verifizieren, vertreten, verteidigen, verwerfen, voraussagen, vorschlagen, wählen, werten, widerlegen,
        ableiten, arrangieren, aufbauen, aufstellen, ausarbeiten, ausdenken, bilden, definieren, designen, entdecken, entwerfen, entwickeln, erarbeiten, erfinden, erschaffen, erstellen, erweitern, erzeugen, generieren, gestalten, hervorbringen, kombinieren, konstruieren, konzipieren, kreieren, modifizieren, optimieren, präparieren, produzieren, verändern, verbinden, verfassen, zuordnen, zusammenfassen, zusammenfügen, zusammensetzen, zusammenstellen
    }

    private Dictionary<TaxonomyLevel, List<VerbOfVisibility>> _verbsByTaxonomyLevel = new()
    {
        { TaxonomyLevel.Erinnern, new List<VerbOfVisibility>() { VerbOfVisibility.anführen, VerbOfVisibility.angeben, VerbOfVisibility.ausdrücken, VerbOfVisibility.auflisten, VerbOfVisibility.aufsagen, VerbOfVisibility.aufschreiben, VerbOfVisibility.aufzählen, VerbOfVisibility.benennen, VerbOfVisibility.berichten, VerbOfVisibility.beschreiben, VerbOfVisibility.bezeichnen, VerbOfVisibility.darstellen, VerbOfVisibility.definieren, VerbOfVisibility.erzählen, VerbOfVisibility.gliedern } },
        { TaxonomyLevel.Verstehen, new List<VerbOfVisibility>() { VerbOfVisibility.anordnen, VerbOfVisibility.auswählen, VerbOfVisibility.begründen, VerbOfVisibility.bestimmen, VerbOfVisibility.charakterisieren, VerbOfVisibility.darlegen, VerbOfVisibility.deuten, VerbOfVisibility.diskutieren, VerbOfVisibility.einordnen, VerbOfVisibility.erkennen, VerbOfVisibility.erklären, VerbOfVisibility.erläutern, VerbOfVisibility.folgern, VerbOfVisibility.generalisieren, VerbOfVisibility.herausstellen, VerbOfVisibility.identifizieren, VerbOfVisibility.interpretieren, VerbOfVisibility.präzisieren, VerbOfVisibility.repräsentieren, VerbOfVisibility.schätzen } },
        { TaxonomyLevel.Anwenden, new List<VerbOfVisibility>() { VerbOfVisibility.abschätzen, VerbOfVisibility.anknüpfen, VerbOfVisibility.anpassen, VerbOfVisibility.anwenden, VerbOfVisibility.aufzeigen, VerbOfVisibility.bearbeiten, VerbOfVisibility.bedienen, VerbOfVisibility.beeinflussen, VerbOfVisibility.benutzen, VerbOfVisibility.berechnen, VerbOfVisibility.darstellen, VerbOfVisibility.demonstrieren, VerbOfVisibility.durchführen, VerbOfVisibility.einordnen, VerbOfVisibility.einsetzen, VerbOfVisibility.erarbeiten, VerbOfVisibility.ermitteln, VerbOfVisibility.erproben, VerbOfVisibility.erstellen, VerbOfVisibility.formulieren, VerbOfVisibility.gestalten, VerbOfVisibility.herstellen, VerbOfVisibility.illustrieren, VerbOfVisibility.implementieren, VerbOfVisibility.konfigurieren, VerbOfVisibility.modifizieren, VerbOfVisibility.praktizieren, VerbOfVisibility.realisieren, VerbOfVisibility.unterscheiden, VerbOfVisibility.umsetzen } },
        { TaxonomyLevel.Analysieren, new List<VerbOfVisibility>() { VerbOfVisibility.abgrenzen, VerbOfVisibility.ableiten, VerbOfVisibility.analysieren, VerbOfVisibility.aufschlüsseln, VerbOfVisibility.aufzeigen, VerbOfVisibility.auswerten, VerbOfVisibility.darstellen, VerbOfVisibility.diagnostizieren, VerbOfVisibility.differenzieren, VerbOfVisibility.einordnen, VerbOfVisibility.einschätzen, VerbOfVisibility.einteilen, VerbOfVisibility.erkennen, VerbOfVisibility.ermitteln, VerbOfVisibility.folgern, VerbOfVisibility.gegenüberstellen, VerbOfVisibility.gliedern, VerbOfVisibility.herausstellen, VerbOfVisibility.hinterfragen, VerbOfVisibility.identifizieren, VerbOfVisibility.integrieren, VerbOfVisibility.isolieren, VerbOfVisibility.kategorisieren, VerbOfVisibility.klassifizieren, VerbOfVisibility.kontrastieren, VerbOfVisibility.nachweisen, VerbOfVisibility.organisieren, VerbOfVisibility.prüfen, VerbOfVisibility.schlussfolgern, VerbOfVisibility.strukturieren, VerbOfVisibility.unterscheiden, VerbOfVisibility.untersuchen, VerbOfVisibility.unterteilen, VerbOfVisibility.vergleichen, VerbOfVisibility.verknüpfen, VerbOfVisibility.verwenden, VerbOfVisibility.voraussagen, VerbOfVisibility.zergliedern, VerbOfVisibility.zerlegen, VerbOfVisibility.zuordnen } },
        { TaxonomyLevel.Beurteilen, new List<VerbOfVisibility>() { VerbOfVisibility.abwägen, VerbOfVisibility.abschätzen, VerbOfVisibility.argumentieren, VerbOfVisibility.auswerten, VerbOfVisibility.begründen, VerbOfVisibility.bestimmen, VerbOfVisibility.beurteilen, VerbOfVisibility.bewerten, VerbOfVisibility.diskutieren, VerbOfVisibility.einschätzen, VerbOfVisibility.einstufen, VerbOfVisibility.entscheiden, VerbOfVisibility.erheben, VerbOfVisibility.evaluieren, VerbOfVisibility.falsifizieren, VerbOfVisibility.folgern, VerbOfVisibility.gegenüberstellen, VerbOfVisibility.gewichten, VerbOfVisibility.hinterfragen, VerbOfVisibility.klassifizieren, VerbOfVisibility.kritisch_vergleichen, VerbOfVisibility.kritisieren, VerbOfVisibility.priorisieren, VerbOfVisibility.rechtfertigen, VerbOfVisibility.schätzen, VerbOfVisibility.strukturieren, VerbOfVisibility.synthetisieren, VerbOfVisibility.überprüfen, VerbOfVisibility.validieren, VerbOfVisibility.vereinfachen, VerbOfVisibility.vergleichen, VerbOfVisibility.verifizieren, VerbOfVisibility.vertreten, VerbOfVisibility.verteidigen, VerbOfVisibility.verwerfen, VerbOfVisibility.voraussagen, VerbOfVisibility.vorschlagen, VerbOfVisibility.wählen, VerbOfVisibility.werten, VerbOfVisibility.widerlegen } },
        { TaxonomyLevel.Erschaffen, new List<VerbOfVisibility>() { VerbOfVisibility.ableiten, VerbOfVisibility.arrangieren, VerbOfVisibility.aufbauen, VerbOfVisibility.aufstellen, VerbOfVisibility.ausarbeiten, VerbOfVisibility.ausdenken, VerbOfVisibility.bilden, VerbOfVisibility.definieren, VerbOfVisibility.designen, VerbOfVisibility.entdecken, VerbOfVisibility.entwerfen, VerbOfVisibility.entwickeln, VerbOfVisibility.erarbeiten, VerbOfVisibility.erfinden, VerbOfVisibility.erschaffen, VerbOfVisibility.erstellen, VerbOfVisibility.erweitern, VerbOfVisibility.erzeugen, VerbOfVisibility.generieren, VerbOfVisibility.gestalten, VerbOfVisibility.hervorbringen, VerbOfVisibility.kombinieren, VerbOfVisibility.konstruieren, VerbOfVisibility.konzipieren, VerbOfVisibility.kreieren, VerbOfVisibility.modifizieren, VerbOfVisibility.optimieren, VerbOfVisibility.präparieren, VerbOfVisibility.produzieren, VerbOfVisibility.verändern, VerbOfVisibility.verbinden, VerbOfVisibility.verfassen, VerbOfVisibility.zuordnen, VerbOfVisibility.zusammenfassen, VerbOfVisibility.zusammenfügen, VerbOfVisibility.zusammensetzen, VerbOfVisibility.zusammenstellen } }
    };
    
    private async Task<IEnumerable<string>> SearchVerbOfVisibility(string value)
    {
        var results = new List<string>();

        if (Enum.TryParse<TaxonomyLevel>(_selectedTaxonomyLevel, out var parsedValue))
        {
            results.AddRange(_verbsByTaxonomyLevel[parsedValue]
                .Where(verb => verb.ToString().Contains(value, StringComparison.InvariantCultureIgnoreCase))
                .Select(verb => verb.ToString().Replace("_", " ")));
        }

        if (!string.IsNullOrEmpty(value) && !results.Contains(value))
        {
            results.Insert(0, value);
        }

        return await Task.FromResult(results);
    }

    private string _currentText = "";
    private void OnBlurVerbOfVisibility()
    {
        _currentLearningOutcome.VerbOfVisibility = _currentText;
    }
    
    private static string FormatWithPlaceholder(string value, string placeholder = "[ ... ]")
    {
        return string.IsNullOrWhiteSpace(value) ? placeholder : $"**{value.Trim()}**";
    }

    private async void CopyToClickBoard()
    {
        try
        {
            await ClipBoardService.SetTextAsync(_currentLearningOutcome.GetOutcomeToCopy());
        }
        catch
        {
            // ignored
        }
    }
    
    private void ResetInputFields()
    {
        _currentLearningOutcome = new LearningOutcome();
        _currentText = "";
        _selectedTaxonomyLevel = "";
    }

}